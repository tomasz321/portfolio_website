{"version":3,"sources":["logo.svg","Components/TD_cv.pdf","icons/postgresql/postgresql-original.svg","icons/bitbucket/bitbucket-original.svg","icons/bootstrap/bootstrap-plain.svg","icons/django/django-original.svg","icons/docker/docker-original.svg","icons/git/git-original.svg","icons/github/github-original.svg","icons/gitlab/gitlab-original.svg","icons/html5/html5-original.svg","icons/java/java-original.svg","icons/javascript/javascript-plain.svg","icons/linux/linux-original.svg","icons/pycharm/pycharm-original.svg","icons/python/python-original.svg","icons/slack/slack-original.svg","Components/NavbarComponent.js","Components/AboutMeComponent.js","Components/MyProjectsComponent.js","Components/ContactComponent.js","Components/HobbiesComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","scrollToTop","scroll","react_default","a","createElement","className","id","src","logo","alt","onClick","this","modules","activeClass","to","spy","smooth","offset","duration","Component","AboutMe","entry","file","cv_file","pageNumber","listLogos","postgres_logo","bitbucket_logo","bootstrap_logo","django_logo","docker_logo","git_logo","github_logo","gitlab_logo","html5_logo","java_logo","javascript_logo","linux_logo","pycharm_logo","python_logo","slack_logo","map","key","toString","create_table","MyProjects","Contact","Hobbies","pdfjs","GlobalWorkerOptions","workerSrc","concat","version","App","NavbarComponent_Navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14b76bda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/TD_cv.37d029f2.pdf\";","module.exports = __webpack_public_path__ + \"static/media/postgresql-original.1e83f710.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitbucket-original.edcc6a50.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-plain.c4ce29f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/django-original.792f835a.svg\";","module.exports = __webpack_public_path__ + \"static/media/docker-original.e618708b.svg\";","module.exports = __webpack_public_path__ + \"static/media/git-original.c02b7da9.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-original.4097a5be.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitlab-original.80922f3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5-original.7997c424.svg\";","module.exports = __webpack_public_path__ + \"static/media/java-original.66517ded.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript-plain.0154328f.svg\";","module.exports = __webpack_public_path__ + \"static/media/linux-original.2bf747f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/pycharm-original.c65b5a94.svg\";","module.exports = __webpack_public_path__ + \"static/media/python-original.3b84eb40.svg\";","module.exports = __webpack_public_path__ + \"static/media/slack-original.bd4a3d92.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nexport default class Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\" id=\"navbar\">\r\n        <div className=\"nav-content\">\r\n          <img\r\n            src={logo}\r\n            className=\"nav-logo\"\r\n            alt=\"Logo\"\r\n            onClick={this.scrollToTop}\r\n          />\r\n          <ul className=\"nav-items\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"AboutMe\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                About me\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"MyProjects\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                My projects\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"Hobbies\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Hobbies\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"Contact\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-70}\r\n                duration={500}\r\n              >\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Document, Page, pdfjs  } from 'react-pdf';\r\nimport cv_file from \"./TD_cv.pdf\";\r\nimport postgres_logo from \"../icons/postgresql/postgresql-original.svg\";\r\nimport bitbucket_logo from \"../icons/bitbucket/bitbucket-original.svg\";\r\nimport bootstrap_logo from \"../icons/bootstrap/bootstrap-plain.svg\";\r\nimport django_logo from \"../icons/django/django-original.svg\";\r\nimport docker_logo from \"../icons/docker/docker-original.svg\";\r\nimport git_logo from \"../icons/git/git-original.svg\";\r\nimport github_logo from \"../icons/github/github-original.svg\";\r\nimport gitlab_logo from \"../icons/gitlab/gitlab-original.svg\";\r\nimport html5_logo from \"../icons/html5/html5-original.svg\";\r\nimport java_logo from \"../icons/java/java-original.svg\";\r\nimport javascript_logo from \"../icons/javascript/javascript-plain.svg\";\r\nimport linux_logo from \"../icons/linux/linux-original.svg\";\r\nimport pycharm_logo from \"../icons/pycharm/pycharm-original.svg\";\r\nimport python_logo from \"../icons/python/python-original.svg\";\r\nimport slack_logo from \"../icons/slack/slack-original.svg\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\n\r\nexport default function AboutMe() {\r\n\r\n    function create_table() {\r\n        const logos = [postgres_logo, bitbucket_logo, bootstrap_logo, django_logo, docker_logo, git_logo, github_logo,\r\n        gitlab_logo, html5_logo, java_logo, javascript_logo, linux_logo, pycharm_logo, python_logo, slack_logo]\r\n        const listLogos = logos.map((logo) => <li className=\"about-me-logo\" key={logo.toString()}><img src={logo}\r\n            alt=\"Logo\"\r\n            /></li>)\r\n        return (\r\n            <ul>{listLogos}</ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"AboutMe\">\r\n            <div className=\"section-content\">\r\n                <h1>About Me</h1>\r\n                <p>Hi, my name is Tomasz and this is my personal webpage/portfolio</p>\r\n                <p>Below you can find my curriculum vitae</p>\r\n                <Document\r\n                    file={cv_file}\r\n                >\r\n                    <Page pageNumber={1} />\r\n                </Document>\r\n                <h1>Technologies</h1>\r\n                {create_table()}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function MyProjects() {\r\n  return (\r\n      <div className=\"section section-dark\">\r\n          <div className=\"MyProjects\">\r\n              <div className=\"section-content\">\r\n                  <h1>My projects</h1>\r\n                  <p>In this section I will talk more about my projects</p>\r\n                  <h1>Aptiv</h1>\r\n                  <p>\r\n                      I started my journey in IT as a data analyst intern, I was responsible for analysing large datasets\r\n                      comming from autonomus vehicles. After two months I was promoted to a Junior Data Science Engineer,\r\n                      and after another two months I became a Regular Data Science Engineer. Durin those few months,\r\n                      I was mostly working with Python and focusing on automating as much of repetitive work as possible.\r\n                      After eight months I was promoted to a Product Owner position, I was responsible for machine learning\r\n                      team, focusing on implementing object, traffic signs and lines detection and tracking.\r\n                  </p>\r\n                  <h1>Diet-AI</h1>\r\n                  <p>\r\n                      During my time in Diet-AI I was responsible for implementing knowledge-based recommendation system\r\n                      from scratch. In order to do that, whole data pipeline was created, database was designed and\r\n                      implemented.\r\n                  </p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n      <div className=\"section section-dark\">\r\n          <div className=\"Contact\">\r\n              <div className=\"section-content\">\r\n                  <h1>Contact</h1>\r\n                  <p>Contact information</p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function Hobbies() {\r\n  return (\r\n      <div className=\"section\">\r\n          <div className=\"Hobbies\">\r\n              <div className=\"section-content\">\r\n                  <h1>Hobbies</h1>\r\n                  <p>In this section I will talk more about hobbies</p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./Components/NavbarComponent\";\r\nimport AboutMe from \"./Components/AboutMeComponent\";\r\nimport MyProjects from \"./Components/MyProjectsComponent\";\r\nimport Contact from \"./Components/ContactComponent\";\r\nimport Hobbies from \"./Components/HobbiesComponent\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <AboutMe />\r\n        <MyProjects />\r\n        <Hobbies />\r\n        <Contact />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}